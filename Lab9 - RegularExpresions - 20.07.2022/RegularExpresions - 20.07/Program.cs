using System;

namespace RegularExpresions___20._07
{
    internal class Program
    {
        static void Main(string[] args)
        {
            //01.Regex - Regular Expresion;
            //02.Специален синтаксис;
            //03.Валидиране на данни;
            //04.Шаблон, по който да Match-нем даден текст
            //05.Имайки съвпадение в текста с шаблона, могат да се заместят, да се вземат данните, да се разделят и други операции;
            //06.Класове - квадратни скоби, може да се сложат няколко елемента в скобите []; като масив от елементи, по които да се търси съвпадение между текста и шаблона;
            //07.Когато искаме да избегнем конкретни символи със знака not '^';
            //08.Обхват с [] скоби - клас от символи:
            //-\w - word character - всички малки букви, всички големи букви и _
            //-\W - non word character - всичко останало с изключение на тези;
            //-\s - white space;
            //-\S - non white space
            //-\d - decimal digit - всички числа от 0-9;
            //-\D - обратно
            //-\ - специален символ, ако искаме да се използва се escape;
            //Regex работи по ASCII таблица и UNICODE!!!

            //Quantifiers:
            // '.' - мачва всичко, не мачва редове; 
            // '+' - предишния елемент, трябва да го има 1 или ПОВЕЧЕ пъти;
            // '*' - предишния елемент, може да го има 0 или ПОВЕЧЕ пъти; 
            // '?' - предишния елемент, може да го има 0 или ЕДИН път;
            // '{}' - точно определен брой пъти взимаме елемента; може да се зададе диапазон; 3, - 3 и нагоре пъти

            //Grouping Constructs
            // '()' - групиране - започва от 1, защото целият израз започва от 1;
            // '?:' - не се хваща групата, след която е знака;
            // '^' -> '$' - израза трябва да започва и да свършва на реда; 
            // '?<name>' - именуване на група;


            //BackReferences
            //\number - за да оеднакви символите в конкретни групи;
            //\k - името на група;

        }
    }
}
